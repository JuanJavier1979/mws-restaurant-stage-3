{"version":3,"sources":["app.js"],"names":["registerSW","navigator","register","serviceWorker","log","console","err","connectionStatus","connected","document","getElementById","elAlert","removeChild","DBHelper","checkOfflineReviews","then","reviews","removeOfflineReview","review","offlineAlert","createElement","id","setAttribute","offlineAlertText","window","addEventListener","onLine"],"mappings":"aAGA,SAASA,aACJ,kBAAmBC,WADxBA,UAASD,cACJE,SAAA,UACSC,KAGsBC,WAAIC,QAAAD,IAAA,8BACzB,SAAcE,GAAAD,QAAAD,IAAA,sCAAAE,KAK7B,IAAMC,iBAAmB,SAACC,GAA1B,GAAMD,EAAAA,CACJ,IAAIC,EAAWC,SAAAC,eAAA,gBACbC,GACAA,EAAGA,cAASC,YAAAD,GAEXE,SAAAC,sBAAAC,KAAA,SAAAC,GACDH,EAASC,QAAAA,SAAAA,GAAAA,OAATD,SAAoCI,oBAAWC,WAC7B,CAAA,IAAhBC,EAAAV,SAAAW,cAAA,KACDD,EAFDE,GAAA,eALFF,EAQOG,aAAA,OAAA,SACL,IAAIH,EAAeV,SAASW,eAA5B,4BACAD,EAAaE,YAAKE,GAClBJ,SAAAA,KAAaG,YAAaH,KAI3BK,OAAAC,iBAAA,OAAA,WAhBHzB,aAqBKC,UAAUyB,OAFfF,kBAAOC,GAELlB,kBAAamB,KAIZF,OAAAC,iBAAA,SAAA,WAAA,OAAAlB,kBAAA,KAKHiB,OAAOC,iBAAiB,UAAW,WAAA,OAAMlB,kBAAiB","file":"app.js","sourcesContent":["/**\n * Service Worker\n */\nfunction registerSW() {\n  if('serviceWorker' in navigator) {\n    navigator.serviceWorker\n             .register('/sw.js')\n             .then(\n               function() { console.log(\"Service Worker Registered\"); },\n               function(err) { console.log(\"Service Worker Registration Error: \", err); }\n             );\n  }\n}\n\nconst connectionStatus = (connected) => {\n  if (connected) {\n    let elAlert = document.getElementById('offlinealert');\n    if(elAlert) {\n      elAlert.parentElement.removeChild(elAlert);\n    }\n    DBHelper.checkOfflineReviews().then(reviews => {\n      reviews.forEach((review) => DBHelper.removeOfflineReview(review));\n    })\n  } else {\n    let offlineAlert = document.createElement('p');\n    offlineAlert.id = 'offlinealert';\n    offlineAlert.setAttribute('role', 'alert');\n    let offlineAlertText = document.createTextNode(\"Your connection is lost.\");\n    offlineAlert.appendChild(offlineAlertText);\n    document.body.appendChild(offlineAlert);\n  }\n}\n\nwindow.addEventListener('load', () => {\n  registerSW();\n  if(navigator.onLine) {\n    connectionStatus(true)\n  } else {\n    connectionStatus(false)\n  }\n});\n\nwindow.addEventListener('online', () => connectionStatus(true));\n\nwindow.addEventListener('offline', () => connectionStatus(false));\n"]}